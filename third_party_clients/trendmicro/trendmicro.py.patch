diff --git a/third_party_clients/trendmicro/trendmicro.py b/third_party_clients/trendmicro/trendmicro.py
index e3b6f17..771ff70 100644
--- a/third_party_clients/trendmicro/trendmicro.py
+++ b/third_party_clients/trendmicro/trendmicro.py
@@ -22,7 +22,7 @@ class TrendMicroClient(ThirdPartyInterface):
     def block_host(self, host):
         mac_addresses = host.mac_addresses
         ip_address = host.ip
-        if len(mac_address) < 1:
+        if len(mac_addresses) < 1:
             # No MAC Address found, block IP
             self._patch_endpoint(ip_address=ip_address,
                                  act="cmd_isolate_agent")
@@ -36,7 +36,7 @@ class TrendMicroClient(ThirdPartyInterface):
     def unblock_host(self, host):
         mac_addresses = host.mac_addresses
         ip_address = host.ip
-        if len(mac_address) < 1:
+        if len(mac_addresses) < 1:
             # No MAC Address found, block IP
             self._patch_endpoint(ip_address=ip_address,
                                  act="cmd_restore_isolated_agent")
@@ -59,7 +59,7 @@ class TrendMicroClient(ThirdPartyInterface):
             'Trend Micro client does not implement detection-based blocking')
         return []
 
-    def _patch_endpoint(self, mac_address, ip_address, act):
+    def _patch_endpoint(self, act, mac_address='', ip_address=''):
         payload = {
             "act": act,
             "allow_multiple_match": False
@@ -72,7 +72,7 @@ class TrendMicroClient(ThirdPartyInterface):
 
         useRequestBody = json.dumps(payload)
 
-        jwt_token = self.create_jwt_token(self, useRequestBody)
+        jwt_token = self.create_jwt_token(useRequestBody)
 
         headers = {'Authorization': 'Bearer ' + jwt_token,
                    'Content-Type': 'application/json;charset=utf-8'}
@@ -81,6 +81,7 @@ class TrendMicroClient(ThirdPartyInterface):
                           data=useRequestBody, verify=False)
         r.raise_for_status()
 
+    @staticmethod
     def create_checksum(http_method, raw_url, headers, request_body):
         string_to_hash = http_method.upper() + '|' + raw_url.lower() + \
             '|' + headers + '|' + request_body
@@ -93,5 +94,6 @@ class TrendMicroClient(ThirdPartyInterface):
                    'iat': time.time(),
                    'version': 'V1',
                    'checksum': self.create_checksum('POST', API_PATH, "", request_body)}
-        token = jwt.encode(payload, API_KEY, algorithm='HS256').decode('utf-8')
+        # token = jwt.encode(payload, API_KEY, algorithm='HS256').decode('utf-8')
+        token = jwt.encode(payload, API_KEY, algorithm='HS256')
         return token
